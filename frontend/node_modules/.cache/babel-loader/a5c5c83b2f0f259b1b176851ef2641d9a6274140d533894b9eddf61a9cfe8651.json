{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/components/Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Orders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Orders() {\n  _s();\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState([]);\n  const [confirmScreen, setConfirmScreen] = useState(false);\n  useEffect(() => {\n    // Simulating fetching orders\n    const simulatedOrders = [{\n      _id: '1',\n      menuItemId: 'Margherita Pizza',\n      quantity: 2,\n      order_time: new Date(),\n      status: 'confirmed',\n      statusIndex: 0\n    }, {\n      _id: '2',\n      menuItemId: 'Caesar Salad',\n      quantity: 1,\n      order_time: new Date(),\n      status: 'confirmed',\n      statusIndex: 0\n    }\n    // Add more items as needed\n    ];\n    setOrders(simulatedOrders);\n    updateStatusAutomatically(simulatedOrders);\n  }, []);\n  const updateStatusAutomatically = orders => {\n    const statusSteps = ['confirmed', 'being prepared', 'order is ready', 'order is out for delivery', 'order delivered'];\n    orders.forEach(order => {\n      let index = 0;\n      const intervalId = setInterval(() => {\n        if (index < statusSteps.length) {\n          setOrders(currentOrders => currentOrders.map(o => o._id === order._id ? {\n            ...o,\n            status: statusSteps[index],\n            statusIndex: index++\n          } : o));\n        } else {\n          clearInterval(intervalId);\n        }\n      }, 5000);\n    });\n  };\n  const handleConfirmReceived = orderId => {\n    // Here you could call an API to delete the order from the backend if needed\n    setOrders(orders => orders.filter(order => order._id !== orderId));\n    setConfirmScreen(true); // Show confirmation screen\n  };\n  if (confirmScreen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enjoy Your Food!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"orders-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Menu Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.menuItemId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(order.order_time).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status === 'order delivered' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleConfirmReceived(order._id),\n              children: \"Confirm Order Received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Orders, \"8or6DpDNjUGRR8o2bjRQ2LwwaLk=\", false, function () {\n  return [useNavigate];\n});\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Orders","_s","navigate","orders","setOrders","confirmScreen","setConfirmScreen","simulatedOrders","_id","menuItemId","quantity","order_time","Date","status","statusIndex","updateStatusAutomatically","statusSteps","forEach","order","index","intervalId","setInterval","length","currentOrders","map","o","clearInterval","handleConfirmReceived","orderId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/components/Orders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Orders.css';\n\nfunction Orders() {\n    const navigate = useNavigate();\n    const [orders, setOrders] = useState([]);\n    const [confirmScreen, setConfirmScreen] = useState(false);\n\n    useEffect(() => {\n        // Simulating fetching orders\n        const simulatedOrders = [\n            { _id: '1', menuItemId: 'Margherita Pizza', quantity: 2, order_time: new Date(), status: 'confirmed', statusIndex: 0 },\n            { _id: '2', menuItemId: 'Caesar Salad', quantity: 1, order_time: new Date(), status: 'confirmed', statusIndex: 0 },\n            // Add more items as needed\n        ];\n        setOrders(simulatedOrders);\n        updateStatusAutomatically(simulatedOrders);\n    }, []);\n\n    const updateStatusAutomatically = (orders) => {\n        const statusSteps = ['confirmed', 'being prepared', 'order is ready', 'order is out for delivery', 'order delivered'];\n\n        orders.forEach(order => {\n            let index = 0;\n            const intervalId = setInterval(() => {\n                if (index < statusSteps.length) {\n                    setOrders(currentOrders => currentOrders.map(o => \n                        o._id === order._id ? { ...o, status: statusSteps[index], statusIndex: index++ } : o\n                    ));\n                } else {\n                    clearInterval(intervalId);\n                }\n            }, 5000);\n        });\n    };\n\n    const handleConfirmReceived = (orderId) => {\n        // Here you could call an API to delete the order from the backend if needed\n        setOrders(orders => orders.filter(order => order._id !== orderId));\n        setConfirmScreen(true); // Show confirmation screen\n    };\n\n    if (confirmScreen) {\n        return (\n            <div className=\"confirmation-screen\">\n                <h1>Enjoy Your Food!</h1>\n                <button onClick={() => navigate('/')}>Back to Home</button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"orders-container\">\n            <h1>Your Orders</h1>\n            <table className=\"orders-table\">\n                <thead>\n                    <tr>\n                        <th>Menu Item</th>\n                        <th>Quantity</th>\n                        <th>Order Time</th>\n                        <th>Status</th>\n                        <th>Confirm</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map(order => (\n                        <tr key={order._id}>\n                            <td>{order.menuItemId}</td>\n                            <td>{order.quantity}</td>\n                            <td>{new Date(order.order_time).toLocaleString()}</td>\n                            <td>{order.status}</td>\n                            <td>\n                                {order.status === 'order delivered' && (\n                                    <button onClick={() => handleConfirmReceived(order._id)}>\n                                        Confirm Order Received\n                                    </button>\n                                )}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Orders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}