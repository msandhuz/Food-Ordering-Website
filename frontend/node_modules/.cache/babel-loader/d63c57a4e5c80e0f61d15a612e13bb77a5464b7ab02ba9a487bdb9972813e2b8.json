{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/AP Project/frontend/src/components/Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Orders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Orders() {\n  _s();\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState([]);\n  const [confirmScreen, setConfirmScreen] = useState(false);\n  const fetchOrders = async () => {\n    try {\n      const response = await fetch('/api/orders'); // Make sure the URL matches your backend route\n      const data = await response.json();\n      setOrders(data);\n    } catch (error) {\n      console.error('Failed to fetch orders:', error);\n    }\n  };\n  const updateStatusAutomatically = useCallback(() => {\n    const statusSteps = ['confirmed', 'being prepared', 'order is ready', 'order is out for delivery', 'order delivered'];\n    orders.forEach(order => {\n      let index = order.statusIndex || 0;\n      const intervalId = setInterval(() => {\n        if (index < statusSteps.length) {\n          setOrders(currentOrders => currentOrders.map(o => o._id === order._id ? {\n            ...o,\n            status: statusSteps[index],\n            statusIndex: index++\n          } : o));\n        } else {\n          clearInterval(intervalId);\n        }\n      }, 5000);\n    });\n  }, [orders]);\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  useEffect(() => {\n    if (orders.length > 0) {\n      updateStatusAutomatically();\n    }\n  }, [orders, updateStatusAutomatically]);\n  const handleConfirmReceived = orderId => {\n    setOrders(orders => orders.filter(order => order._id !== orderId));\n    setConfirmScreen(true); // Show confirmation screen\n  };\n  if (confirmScreen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enjoy Your Food!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"orders-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Menu Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.items.map(item => item.menuItemId.name).join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.items.reduce((sum, item) => sum + item.quantity, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(order.order_time).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status === 'order delivered' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleConfirmReceived(order._id),\n              children: \"Confirm Order Received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Orders, \"sCarwNXO1U+8kCVXxRKzRPQc0AI=\", false, function () {\n  return [useNavigate];\n});\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","Orders","_s","navigate","orders","setOrders","confirmScreen","setConfirmScreen","fetchOrders","response","fetch","data","json","error","console","updateStatusAutomatically","statusSteps","forEach","order","index","statusIndex","intervalId","setInterval","length","currentOrders","map","o","_id","status","clearInterval","handleConfirmReceived","orderId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","items","item","menuItemId","name","join","reduce","sum","quantity","Date","order_time","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/AP Project/frontend/src/components/Orders.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Orders.css';\n\nfunction Orders() {\n    const navigate = useNavigate();\n    const [orders, setOrders] = useState([]);\n    const [confirmScreen, setConfirmScreen] = useState(false);\n\n    const fetchOrders = async () => {\n        try {\n            const response = await fetch('/api/orders');  // Make sure the URL matches your backend route\n            const data = await response.json();\n            setOrders(data);\n        } catch (error) {\n            console.error('Failed to fetch orders:', error);\n        }\n    };\n\n    const updateStatusAutomatically = useCallback(() => {\n        const statusSteps = ['confirmed', 'being prepared', 'order is ready', 'order is out for delivery', 'order delivered'];\n\n        orders.forEach(order => {\n            let index = order.statusIndex || 0;\n            const intervalId = setInterval(() => {\n                if (index < statusSteps.length) {\n                    setOrders(currentOrders => currentOrders.map(o => \n                        o._id === order._id ? { ...o, status: statusSteps[index], statusIndex: index++ } : o\n                    ));\n                } else {\n                    clearInterval(intervalId);\n                }\n            }, 5000);\n        });\n    }, [orders]);\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    useEffect(() => {\n        if (orders.length > 0) {\n            updateStatusAutomatically();\n        }\n    }, [orders, updateStatusAutomatically]);\n\n    const handleConfirmReceived = (orderId) => {\n        setOrders(orders => orders.filter(order => order._id !== orderId));\n        setConfirmScreen(true); // Show confirmation screen\n    };\n\n    if (confirmScreen) {\n        return (\n            <div className=\"confirmation-screen\">\n                <h1>Enjoy Your Food!</h1>\n                <button onClick={() => navigate('/')}>Back to Home</button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"orders-container\">\n            <h1>Your Orders</h1>\n            <table className=\"orders-table\">\n                <thead>\n                    <tr>\n                        <th>Menu Item</th>\n                        <th>Quantity</th>\n                        <th>Order Time</th>\n                        <th>Status</th>\n                        <th>Confirm</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map(order => (\n                        <tr key={order._id}>\n                            <td>{order.items.map(item => item.menuItemId.name).join(\", \")}</td>\n                            <td>{order.items.reduce((sum, item) => sum + item.quantity, 0)}</td>\n                            <td>{new Date(order.order_time).toLocaleString()}</td>\n                            <td>{order.status}</td>\n                            <td>\n                                {order.status === 'order delivered' && (\n                                    <button onClick={() => handleConfirmReceived(order._id)}>\n                                        Confirm Order Received\n                                    </button>\n                                )}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Orders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}