{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  // Helper function to sort teams and assign ranks\n  const sortTeamsAndAssignRanks = teams => {\n    return teams.sort((a, b) => b.score - a.score).map((team, index) => ({\n      ...team,\n      rank: index + 1\n    }));\n  };\n\n  // Helper function to format scores\n  const formatScore = score => {\n    return `+${new Intl.NumberFormat('en-US').format(score)}`;\n  };\n\n  // Initial teams data, sorted and ranked\n  const initialTeams = [{\n    _id: '1',\n    name: 'The Avengers',\n    gamesPlayed: 17,\n    score: 295567,\n    avatarUrl: '/Images/1.jpg'\n  }, {\n    _id: '2',\n    name: 'Skale',\n    gamesPlayed: 26,\n    score: 259981,\n    avatarUrl: '/Images/2.jpg'\n  }, {\n    _id: '3',\n    name: 'One Million Bugs',\n    gamesPlayed: 21,\n    score: 515678,\n    avatarUrl: '/Images/3.jpg'\n  }, {\n    _id: '4',\n    name: 'The Musketeers',\n    gamesPlayed: 25,\n    score: 496677,\n    avatarUrl: '/Images/4.jpg'\n  }, {\n    _id: '5',\n    name: 'Bugs Killer',\n    gamesPlayed: 23,\n    score: 413324,\n    avatarUrl: '/Images/5.jpg'\n  }, {\n    _id: '6',\n    name: 'Foo Fighters',\n    gamesPlayed: 19,\n    score: 356784,\n    avatarUrl: '/Images/6.jpg'\n  }, {\n    _id: '7',\n    name: 'The Ultimate',\n    gamesPlayed: 21,\n    score: 509873,\n    avatarUrl: '/Images/7.jpg'\n  }];\n  const [teams, setTeams] = useState(sortTeamsAndAssignRanks(initialTeams));\n  const [loading, setLoading] = useState(false);\n  const loadTeams = () => {\n    setLoading(true); // Start loading transition\n    fetch('http://localhost:5001/api/teams').then(response => response.json()).then(data => {\n      setTimeout(() => {\n        // Delay the update to simulate loading for 0.5 seconds\n        setTeams(sortTeamsAndAssignRanks(data));\n        setLoading(false); // End loading transition\n      }, 500); // 500 milliseconds = 0.5 seconds\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  };\n  const getRankTrophy = rank => {\n    switch (rank) {\n      case 1:\n        return '/Images/golden.jpg';\n      case 2:\n        return '/Images/silver.jpg';\n      case 3:\n        return '/Images/bronze.jpg';\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `leaderboard-container ${loading ? 'loading' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadTeams,\n      children: \"Update Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) // Stylish loading indicator\n    : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RANK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TEAM NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL GAMES PLAYED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getRankTrophy(team.rank) ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getRankTrophy(team.rank),\n              alt: `Trophy for Rank ${team.rank}`,\n              style: {\n                width: '30px',\n                height: '30px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this) : team.rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: team.avatarUrl || '/Images/1.jpg',\n              alt: team.name,\n              className: \"avatar\",\n              style: {\n                width: '50px',\n                height: '50px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), team.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.gamesPlayed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatScore(team.score)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, team._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Leaderboard, \"SU2HU39n3X51peawU8BrQx1xHEM=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Leaderboard","_s","sortTeamsAndAssignRanks","teams","sort","a","b","score","map","team","index","rank","formatScore","Intl","NumberFormat","format","initialTeams","_id","name","gamesPlayed","avatarUrl","setTeams","loading","setLoading","loadTeams","fetch","then","response","json","data","setTimeout","catch","error","console","getRankTrophy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","width","height","marginRight","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Leaderboard() {\n    // Helper function to sort teams and assign ranks\n    const sortTeamsAndAssignRanks = (teams) => {\n        return teams.sort((a, b) => b.score - a.score)\n                    .map((team, index) => ({ ...team, rank: index + 1 }));\n    };\n\n    // Helper function to format scores\n    const formatScore = (score) => {\n        return `+${new Intl.NumberFormat('en-US').format(score)}`;\n    };\n\n    // Initial teams data, sorted and ranked\n    const initialTeams = [\n        { _id: '1', name: 'The Avengers', gamesPlayed: 17, score: 295567, avatarUrl: '/Images/1.jpg' },\n        { _id: '2', name: 'Skale', gamesPlayed: 26, score: 259981, avatarUrl: '/Images/2.jpg' },\n        { _id: '3', name: 'One Million Bugs', gamesPlayed: 21, score: 515678, avatarUrl: '/Images/3.jpg' },\n        { _id: '4', name: 'The Musketeers', gamesPlayed: 25, score: 496677, avatarUrl: '/Images/4.jpg' },\n        { _id: '5', name: 'Bugs Killer', gamesPlayed: 23, score: 413324, avatarUrl: '/Images/5.jpg' },\n        { _id: '6', name: 'Foo Fighters', gamesPlayed: 19, score: 356784, avatarUrl: '/Images/6.jpg' },\n        { _id: '7', name: 'The Ultimate', gamesPlayed: 21, score: 509873, avatarUrl: '/Images/7.jpg' },\n    ];\n    const [teams, setTeams] = useState(sortTeamsAndAssignRanks(initialTeams));\n    const [loading, setLoading] = useState(false);\n\n    const loadTeams = () => {\n        setLoading(true); // Start loading transition\n        fetch('http://localhost:5001/api/teams')\n            .then(response => response.json())\n            .then(data => {\n                setTimeout(() => { // Delay the update to simulate loading for 0.5 seconds\n                    setTeams(sortTeamsAndAssignRanks(data));\n                    setLoading(false); // End loading transition\n                }, 500); // 500 milliseconds = 0.5 seconds\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n                setLoading(false);\n            });\n    };\n\n    const getRankTrophy = (rank) => {\n        switch(rank) {\n            case 1: return '/Images/golden.jpg';\n            case 2: return '/Images/silver.jpg';\n            case 3: return '/Images/bronze.jpg';\n            default: return null;\n        }\n    };\n\n    return (\n        <div className={`leaderboard-container ${loading ? 'loading' : ''}`}>\n            <h1>Leaderboard</h1>\n            <button onClick={loadTeams}>Update Scores</button>\n            {loading ? (\n                <div className=\"loading-overlay\">Loading...</div>  // Stylish loading indicator\n            ) : (\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>RANK</th>\n                            <th>TEAM NAME</th>\n                            <th>TOTAL GAMES PLAYED</th>\n                            <th>SCORE</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {teams.map((team) => (\n                            <tr key={team._id}>\n                                <td>\n                                    {getRankTrophy(team.rank) ? (\n                                        <img src={getRankTrophy(team.rank)} alt={`Trophy for Rank ${team.rank}`} style={{ width: '30px', height: '30px' }} />\n                                    ) : (\n                                        team.rank\n                                    )}\n                                </td>\n                                <td>\n                                    <img src={team.avatarUrl || '/Images/1.jpg'} alt={team.name} className=\"avatar\" style={{ width: '50px', height: '50px', marginRight: '10px' }} />\n                                    {team.name}\n                                </td>\n                                <td>{team.gamesPlayed}</td>\n                                <td>{formatScore(team.score)}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n}\n\nexport default Leaderboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACvC,OAAOA,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC,CACjCC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;MAAE,GAAGD,IAAI;MAAEE,IAAI,EAAED,KAAK,GAAG;IAAE,CAAC,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAME,WAAW,GAAIL,KAAK,IAAK;IAC3B,OAAQ,IAAG,IAAIM,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACC,MAAM,CAACR,KAAK,CAAE,EAAC;EAC7D,CAAC;;EAED;EACA,MAAMS,YAAY,GAAG,CACjB;IAAEC,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,cAAc;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,EAC9F;IAAEH,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,EACvF;IAAEH,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,EAClG;IAAEH,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,EAChG;IAAEH,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,aAAa;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,EAC7F;IAAEH,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,cAAc;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,EAC9F;IAAEH,GAAG,EAAE,GAAG;IAAEC,IAAI,EAAE,cAAc;IAAEC,WAAW,EAAE,EAAE;IAAEZ,KAAK,EAAE,MAAM;IAAEa,SAAS,EAAE;EAAgB,CAAC,CACjG;EACD,MAAM,CAACjB,KAAK,EAAEkB,QAAQ,CAAC,GAAGxB,QAAQ,CAACK,uBAAuB,CAACc,YAAY,CAAC,CAAC;EACzE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM2B,SAAS,GAAGA,CAAA,KAAM;IACpBD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBE,KAAK,CAAC,iCAAiC,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVC,UAAU,CAAC,MAAM;QAAE;QACfT,QAAQ,CAACnB,uBAAuB,CAAC2B,IAAI,CAAC,CAAC;QACvCN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CT,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC;EAED,MAAMW,aAAa,GAAIvB,IAAI,IAAK;IAC5B,QAAOA,IAAI;MACP,KAAK,CAAC;QAAE,OAAO,oBAAoB;MACnC,KAAK,CAAC;QAAE,OAAO,oBAAoB;MACnC,KAAK,CAAC;QAAE,OAAO,oBAAoB;MACnC;QAAS,OAAO,IAAI;IACxB;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKoC,SAAS,EAAG,yBAAwBb,OAAO,GAAG,SAAS,GAAG,EAAG,EAAE;IAAAc,QAAA,gBAChErC,OAAA;MAAAqC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzC,OAAA;MAAQ0C,OAAO,EAAEjB,SAAU;MAAAY,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDlB,OAAO,gBACJvB,OAAA;MAAKoC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAE;IAAA,eAEnDzC,OAAA;MAAOoC,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBrC,OAAA;QAAAqC,QAAA,eACIrC,OAAA;UAAAqC,QAAA,gBACIrC,OAAA;YAAAqC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbzC,OAAA;YAAAqC,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBzC,OAAA;YAAAqC,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BzC,OAAA;YAAAqC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRzC,OAAA;QAAAqC,QAAA,EACKjC,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACZV,OAAA;UAAAqC,QAAA,gBACIrC,OAAA;YAAAqC,QAAA,EACKF,aAAa,CAACzB,IAAI,CAACE,IAAI,CAAC,gBACrBZ,OAAA;cAAK2C,GAAG,EAAER,aAAa,CAACzB,IAAI,CAACE,IAAI,CAAE;cAACgC,GAAG,EAAG,mBAAkBlC,IAAI,CAACE,IAAK,EAAE;cAACiC,KAAK,EAAE;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,MAAM,EAAE;cAAO;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAErH/B,IAAI,CAACE;UACR;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACLzC,OAAA;YAAAqC,QAAA,gBACIrC,OAAA;cAAK2C,GAAG,EAAEjC,IAAI,CAACW,SAAS,IAAI,eAAgB;cAACuB,GAAG,EAAElC,IAAI,CAACS,IAAK;cAACiB,SAAS,EAAC,QAAQ;cAACS,KAAK,EAAE;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,MAAM,EAAE,MAAM;gBAAEC,WAAW,EAAE;cAAO;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAChJ/B,IAAI,CAACS,IAAI;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACLzC,OAAA;YAAAqC,QAAA,EAAK3B,IAAI,CAACU;UAAW;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BzC,OAAA;YAAAqC,QAAA,EAAKxB,WAAW,CAACH,IAAI,CAACF,KAAK;UAAC;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAb7B/B,IAAI,CAACQ,GAAG;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACvC,EAAA,CAzFQD,WAAW;AAAAgD,EAAA,GAAXhD,WAAW;AA2FpB,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}