{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [teams, setTeams] = useState([{\n    _id: '1',\n    name: 'The Avengers',\n    gamesPlayed: 29,\n    score: 295567,\n    avatarUrl: '/Images/golden.jpg'\n  }, {\n    _id: '2',\n    name: 'Skale',\n    gamesPlayed: 29,\n    score: 259981,\n    avatarUrl: '/Images/silver.jpg'\n  }, {\n    _id: '3',\n    name: 'One Million Bugs',\n    gamesPlayed: 27,\n    score: 515678,\n    avatarUrl: '/Images/bronze.jpg'\n  }, {\n    _id: '4',\n    name: 'The Musketeers',\n    gamesPlayed: 29,\n    score: 496677,\n    avatarUrl: '/Images/green.jpg'\n  }, {\n    _id: '5',\n    name: 'Bugs Killer',\n    gamesPlayed: 29,\n    score: 413324,\n    avatarUrl: '/Images/blue.jpg'\n  }, {\n    _id: '6',\n    name: 'Foo Fighters',\n    gamesPlayed: 25,\n    score: 356784,\n    avatarUrl: '/Images/purple.jpg'\n  }, {\n    _id: '7',\n    name: 'The Ultimate',\n    gamesPlayed: 25,\n    score: 509873,\n    avatarUrl: '/Images/red.jpg'\n  }]);\n  useEffect(() => {\n    loadTeams();\n  }, []);\n  const loadTeams = () => {\n    // Simulate fetching data (replace with actual fetch request)\n    fetch('http://localhost:5001/api/teams').then(response => response.json()).then(data => {\n      // Sort teams by score in descending order and assign rank\n      const sortedTeams = data.sort((a, b) => b.score - a.score);\n      sortedTeams.forEach((team, index) => {\n        team.rank = index + 1;\n      });\n      setTeams(sortedTeams);\n    }).catch(error => console.error('Error fetching data:', error));\n  };\n  const getRankTrophy = rank => {\n    switch (rank) {\n      case 1:\n        return '/Images/golden.jpg';\n      case 2:\n        return '/Images/silver.jpg';\n      case 3:\n        return '/Images/bronze.jpg';\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadTeams,\n      children: \"Update Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RANK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TEAM NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL GAMES PLAYED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getRankTrophy(team.rank) ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getRankTrophy(team.rank),\n              alt: `Trophy for Rank ${team.rank}`,\n              style: {\n                width: '30px',\n                height: '30px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this) : team.rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: team.avatarUrl || '/Images/1.jpg',\n              alt: team.name,\n              className: \"avatar\",\n              style: {\n                width: '50px',\n                height: '50px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), team.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.gamesPlayed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, team._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Leaderboard, \"aFF1xVcgnH0h03yHC4BkvoJ8q28=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Leaderboard","_s","teams","setTeams","_id","name","gamesPlayed","score","avatarUrl","loadTeams","fetch","then","response","json","data","sortedTeams","sort","a","b","forEach","team","index","rank","catch","error","console","getRankTrophy","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","src","alt","style","width","height","marginRight","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Leaderboard() {\n    const [teams, setTeams] = useState([\n        { _id: '1', name: 'The Avengers', gamesPlayed: 29, score: 295567, avatarUrl: '/Images/golden.jpg' },\n        { _id: '2', name: 'Skale', gamesPlayed: 29, score: 259981, avatarUrl: '/Images/silver.jpg' },\n        { _id: '3', name: 'One Million Bugs', gamesPlayed: 27, score: 515678, avatarUrl: '/Images/bronze.jpg' },\n        { _id: '4', name: 'The Musketeers', gamesPlayed: 29, score: 496677, avatarUrl: '/Images/green.jpg' },\n        { _id: '5', name: 'Bugs Killer', gamesPlayed: 29, score: 413324, avatarUrl: '/Images/blue.jpg' },\n        { _id: '6', name: 'Foo Fighters', gamesPlayed: 25, score: 356784, avatarUrl: '/Images/purple.jpg' },\n        { _id: '7', name: 'The Ultimate', gamesPlayed: 25, score: 509873, avatarUrl: '/Images/red.jpg' },\n    ]);\n\n    useEffect(() => {\n        loadTeams();\n    }, []);\n\n    const loadTeams = () => {\n        // Simulate fetching data (replace with actual fetch request)\n        fetch('http://localhost:5001/api/teams')\n            .then(response => response.json())\n            .then(data => {\n                // Sort teams by score in descending order and assign rank\n                const sortedTeams = data.sort((a, b) => b.score - a.score);\n                sortedTeams.forEach((team, index) => {\n                    team.rank = index + 1;\n                });\n\n                setTeams(sortedTeams);\n            })\n            .catch(error => console.error('Error fetching data:', error));\n    };\n\n    const getRankTrophy = (rank) => {\n        switch(rank) {\n            case 1: return '/Images/golden.jpg';\n            case 2: return '/Images/silver.jpg';\n            case 3: return '/Images/bronze.jpg';\n            default: return null;\n        }\n    };\n\n    return (\n        <div>\n            <h1>Leaderboard</h1>\n            <button onClick={loadTeams}>Update Scores</button>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>RANK</th>\n                        <th>TEAM NAME</th>\n                        <th>TOTAL GAMES PLAYED</th>\n                        <th>SCORE</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {teams.map((team) => (\n                        <tr key={team._id}>\n                            <td>\n                                {getRankTrophy(team.rank) ? (\n                                    <img src={getRankTrophy(team.rank)} alt={`Trophy for Rank ${team.rank}`} style={{ width: '30px', height: '30px' }} />\n                                ) : (\n                                    team.rank\n                                )}\n                            </td>\n                            <td>\n                                <img src={team.avatarUrl || '/Images/1.jpg'} alt={team.name} className=\"avatar\" style={{ width: '50px', height: '50px', marginRight: '10px' }} />\n                                {team.name}\n                            </td>\n                            <td>{team.gamesPlayed}</td>\n                            <td>{team.score}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Leaderboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}