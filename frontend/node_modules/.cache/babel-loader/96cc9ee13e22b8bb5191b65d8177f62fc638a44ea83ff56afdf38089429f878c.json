{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Team from './Team';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  // Initialize teams state as an empty array\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    // Fetch teams when component mounts\n    axios.get('http://localhost:5001/api/teams') // Ensure this points to your correct backend URL\n    .then(response => {\n      setTeams(response.data); // Set the fetched teams into state\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []); // The empty array ensures this effect runs only once after the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), Array.isArray(teams) && teams.map(team => /*#__PURE__*/_jsxDEV(Team, {\n      team: team\n    }, team._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Leaderboard, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Team","jsxDEV","_jsxDEV","Leaderboard","_s","teams","setTeams","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","team","_id","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Team from './Team';\n\nfunction Leaderboard() {\n    // Initialize teams state as an empty array\n    const [teams, setTeams] = useState([]);\n\n    useEffect(() => {\n        // Fetch teams when component mounts\n        axios.get('http://localhost:5001/api/teams') // Ensure this points to your correct backend URL\n            .then(response => {\n                setTeams(response.data); // Set the fetched teams into state\n            })\n            .catch(error => console.error('Error fetching data:', error));\n    }, []); // The empty array ensures this effect runs only once after the component mounts\n\n    return (\n        <div>\n            <h1>Leaderboard</h1>\n            {Array.isArray(teams) && teams.map(team => (\n                <Team key={team._id} team={team} />\n            ))}\n        </div>\n    );\n}\n\nexport default Leaderboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACQ,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAAA,CACxCC,IAAI,CAACC,QAAQ,IAAI;MACdH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIV,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBC,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,IAAIA,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACnCpB,OAAA,CAACF,IAAI;MAAgBsB,IAAI,EAAEA;IAAK,GAArBA,IAAI,CAACC,GAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACd,EAAA,CArBQD,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAuBpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}