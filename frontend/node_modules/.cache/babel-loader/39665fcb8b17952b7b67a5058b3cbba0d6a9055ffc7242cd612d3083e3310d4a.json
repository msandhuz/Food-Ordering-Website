{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [teams, setTeams] = useState([{\n    _id: '1',\n    name: 'The Avengers',\n    gamesPlayed: 29,\n    score: 515678,\n    rank: 1,\n    avatarUrl: '/Images/golden.jpg'\n  }, {\n    _id: '2',\n    name: 'Skale',\n    gamesPlayed: 29,\n    score: 509873,\n    rank: 2,\n    avatarUrl: '/Images/silver.jpg'\n  }, {\n    _id: '3',\n    name: 'One Million Bugs',\n    gamesPlayed: 27,\n    score: 496677,\n    rank: 3,\n    avatarUrl: '/Images/bronze.jpg'\n  }, {\n    _id: '4',\n    name: 'The Musketeers',\n    gamesPlayed: 29,\n    score: 413324,\n    rank: 4,\n    avatarUrl: '/Images/green.jpg'\n  }, {\n    _id: '5',\n    name: 'Bugs Killer',\n    gamesPlayed: 29,\n    score: 356784,\n    rank: 4,\n    avatarUrl: '/Images/blue.jpg'\n  }, {\n    _id: '6',\n    name: 'Foo Fighters',\n    gamesPlayed: 25,\n    score: 295567,\n    rank: 5,\n    avatarUrl: '/Images/purple.jpg'\n  }, {\n    _id: '7',\n    name: 'The Ultimate',\n    gamesPlayed: 25,\n    score: 259981,\n    rank: 7,\n    avatarUrl: '/Images/red.jpg'\n  }]);\n  useEffect(() => {\n    // Initially load the data\n    loadData();\n  }, []);\n  const loadData = () => {\n    fetch('http://localhost:5001/api/teams').then(response => response.json()).then(data => {\n      setTeams(data.map((team, index) => ({\n        ...team,\n        rank: index + 1\n      })));\n    }).catch(error => console.error('Error fetching data:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadData,\n      children: \"Update Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RANK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TEAM NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL GAMES PLAYED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"team-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: team.avatarUrl || '/Images/1.jpg',\n              alt: team.name,\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), team.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.gamesPlayed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, team._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Leaderboard, \"HwJeS1dcHAbfd/CejZsk7PIeGjk=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Leaderboard","_s","teams","setTeams","_id","name","gamesPlayed","score","rank","avatarUrl","loadData","fetch","then","response","json","data","map","team","index","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","src","alt","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Leaderboard() {\n    const [teams, setTeams] = useState([\n        { _id: '1', name: 'The Avengers', gamesPlayed: 29, score: 515678, rank: 1, avatarUrl: '/Images/golden.jpg' },\n        { _id: '2', name: 'Skale', gamesPlayed: 29, score: 509873, rank: 2, avatarUrl: '/Images/silver.jpg' },\n        { _id: '3', name: 'One Million Bugs', gamesPlayed: 27, score: 496677, rank: 3, avatarUrl: '/Images/bronze.jpg' },\n        { _id: '4', name: 'The Musketeers', gamesPlayed: 29, score: 413324, rank: 4, avatarUrl: '/Images/green.jpg' },\n        { _id: '5', name: 'Bugs Killer', gamesPlayed: 29, score: 356784, rank: 4, avatarUrl: '/Images/blue.jpg' },\n        { _id: '6', name: 'Foo Fighters', gamesPlayed: 25, score: 295567, rank: 5, avatarUrl: '/Images/purple.jpg' },\n        { _id: '7', name: 'The Ultimate', gamesPlayed: 25, score: 259981, rank: 7, avatarUrl: '/Images/red.jpg' },\n    ]);    \n\n    useEffect(() => {\n        // Initially load the data\n        loadData();\n    }, []);\n\n    const loadData = () => {\n        fetch('http://localhost:5001/api/teams')\n            .then(response => response.json())\n            .then(data => {\n                setTeams(data.map((team, index) => ({...team, rank: index + 1})));\n            })\n            .catch(error => console.error('Error fetching data:', error));\n    };\n\n    return (\n        <div>\n            <h1>Leaderboard</h1>\n            <button onClick={loadData}>Update Scores</button>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>RANK</th>\n                        <th>TEAM NAME</th>\n                        <th>TOTAL GAMES PLAYED</th>\n                        <th>SCORE</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {teams.map((team) => (\n                        <tr key={team._id}>\n                            <td>\n                                {team.rank}\n                            </td>\n                            <td className=\"team-name\">\n                                <img src={team.avatarUrl || '/Images/1.jpg'} alt={team.name} className=\"avatar\" />\n                                {team.name}\n                            </td>\n                            <td>{team.gamesPlayed}</td>\n                            <td>{team.score}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Leaderboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}