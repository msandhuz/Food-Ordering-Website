{"ast":null,"code":"var _jsxFileName = \"/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/components/Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Orders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Orders() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5001/api/orders');\n        if (!response.ok) throw new Error('Something went wrong');\n        const fetchedOrders = await response.json();\n        setOrders(fetchedOrders.map(order => ({\n          ...order,\n          statusIndex: 0 // Adding statusIndex to track current status position\n        })));\n        updateStatusAutomatically(fetchedOrders);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchOrders();\n  }, []);\n\n  // Function to simulate status updates\n  const updateStatusAutomatically = fetchedOrders => {\n    const statusSteps = ['confirmed', 'being prepared', 'order is ready', 'order is out for delivery', 'order delivered'];\n    fetchedOrders.forEach(order => {\n      statusSteps.forEach((status, index) => {\n        setTimeout(() => {\n          setOrders(currentOrders => currentOrders.map(currentOrder => {\n            if (currentOrder._id === order._id) {\n              return {\n                ...currentOrder,\n                status: status,\n                statusIndex: index\n              };\n            }\n            return currentOrder;\n          }));\n        }, 5000 * (index + 1)); // Update status every 5 seconds\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 52\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"orders-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Menu Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.menuItemId ? item.menuItemId.name : 'No item name'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.items.reduce((total, item) => total + item.quantity, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(order.order_time).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No orders found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Orders, \"NvRvzRo6fN35U/te/Upk6+qZnyE=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","loading","setLoading","error","setError","fetchOrders","response","fetch","ok","Error","fetchedOrders","json","map","order","statusIndex","updateStatusAutomatically","console","message","statusSteps","forEach","status","index","setTimeout","currentOrders","currentOrder","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","items","item","menuItemId","name","reduce","total","quantity","Date","order_time","toLocaleString","colSpan","_c","$RefreshReg$"],"sources":["/Users/zainabmushtaq/leaderboard-app/leaderboard-frontend/src/components/Orders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Orders.css';\n\nfunction Orders() {\n    const [orders, setOrders] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchOrders = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch('http://localhost:5001/api/orders');\n                if (!response.ok) throw new Error('Something went wrong');\n                const fetchedOrders = await response.json();\n                setOrders(fetchedOrders.map(order => ({\n                    ...order,\n                    statusIndex: 0 // Adding statusIndex to track current status position\n                })));\n                updateStatusAutomatically(fetchedOrders);\n            } catch (error) {\n                console.error('Error fetching orders:', error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchOrders();\n    }, []);\n\n    // Function to simulate status updates\n    const updateStatusAutomatically = (fetchedOrders) => {\n        const statusSteps = ['confirmed', 'being prepared', 'order is ready', 'order is out for delivery', 'order delivered'];\n\n        fetchedOrders.forEach(order => {\n            statusSteps.forEach((status, index) => {\n                setTimeout(() => {\n                    setOrders(currentOrders => currentOrders.map(currentOrder => {\n                        if (currentOrder._id === order._id) {\n                            return { ...currentOrder, status: status, statusIndex: index };\n                        }\n                        return currentOrder;\n                    }));\n                }, 5000 * (index + 1)); // Update status every 5 seconds\n            });\n        });\n    };\n\n    return (\n        <div className=\"orders-container\">\n            <h1>Your Orders</h1>\n            {loading ? <p>Loading...</p> : error ? <p>Error: {error}</p> : (\n                <table className=\"orders-table\">\n                    <thead>\n                        <tr>\n                            <th>Menu Item</th>\n                            <th>Quantity</th>\n                            <th>Order Time</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.length > 0 ? orders.map(order => (\n                            <tr key={order._id}>\n                                {order.items.map((item, index) => (\n                                    <td key={index}>{item.menuItemId ? item.menuItemId.name : 'No item name'}</td>\n                                ))}\n                                <td>{order.items.reduce((total, item) => total + item.quantity, 0)}</td>\n                                <td>{new Date(order.order_time).toLocaleString()}</td>\n                                <td>{order.status}</td>\n                            </tr>\n                        )) : <tr><td colSpan=\"4\">No orders found</td></tr>}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n}\n\nexport default Orders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}